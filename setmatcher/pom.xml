<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>rr-oai</artifactId>
        <groupId>dk.dbc</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>rr-oai-setmatcher</artifactId>
    <packaging>war</packaging>

    <properties>
        <rawrepo-queue-dao.version>1.1-SNAPSHOT</rawrepo-queue-dao.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rr-oai-db</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>dbc-jslib</artifactId>
            <version>2.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>rawrepo-queue-dao</artifactId>
            <version>${rawrepo-queue-dao.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>dk.dbc.commoms.testutils</groupId>
                    <artifactId>dbc-commons-testutil-postgres-connection</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>dk.dbc</groupId>
            <artifactId>rawrepo-record-service-connector</artifactId>
            <version>2.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.11.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
        </dependency>

        <!-- From microservice-pom -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.health</groupId>
            <artifactId>microprofile-health-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- For testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>rawrepo-schema</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dk.dbc</groupId>
                                    <artifactId>rawrepo-queue-dao</artifactId>
                                    <version>${rawrepo-queue-dao.version}</version>
                                    <type>jar</type>
                                    <outputDirectory>${project.build.directory}/sql/</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <include>*.sql</include>
                            <exclude>**/</exclude>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-jscommon</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dk.dbc</groupId>
                                    <artifactId>nashorn-js-jscommon</artifactId>
                                    <version>1.0-SNAPSHOT</version>
                                </artifactItem>
                            </artifactItems>
                            <excludeTransitive>true</excludeTransitive>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <useSubDirectoryPerArtifact>false</useSubDirectoryPerArtifact>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-jsunittest</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dk.dbc.testutils</groupId>
                                    <artifactId>maven-javascript-unit-test-runner</artifactId>
                                    <version>0.1.0-SNAPSHOT</version>
                                    <type>tar.gz</type>
                                    <classifier>bin</classifier>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <useSubDirectoryPerArtifact>false</useSubDirectoryPerArtifact>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <portNames>
                                <portName>wiremock.port</portName>
                                <portName>postgresql.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>Javascript unit tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
<skip>true</skip>
                    <executable>${project.build.directory}/maven-javascript-unit-test-runner/bin/test-runner.sh</executable>
                    <workingDirectory>${project.build.directory}/maven-javascript-unit-test-runner</workingDirectory>
                    <environmentVariables>
                        <USE_JAVA_XML_DOM>true</USE_JAVA_XML_DOM>
                        <MODULE_PATHS>
                            file:${project.build.directory}/classes/javascript/ file:${project.build.directory}/classes/javascript/javacore/ file:${project.build.directory}/classes/javascript/jscommon/config/ file:${project.build.directory}/classes/javascript/jscommon/convert/ file:${project.build.directory}/classes/javascript/jscommon/devel/ file:${project.build.directory}/classes/javascript/jscommon/external/ file:${project.build.directory}/classes/javascript/jscommon/io/ file:${project.build.directory}/classes/javascript/jscommon/marc/ file:${project.build.directory}/classes/javascript/jscommon/net/ file:${project.build.directory}/classes/javascript/jscommon/system/ file:${project.build.directory}/classes/javascript/jscommon/util/ file:${project.build.directory}/classes/javascript/jscommon/xml/
                        </MODULE_PATHS>
                    </environmentVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>uk.co.automatictester</groupId>
                <artifactId>wiremock-maven-plugin</artifactId>
                <version>2.14.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <dir>${basedir}/src/test/resources/wiremock</dir>
                            <params>--port=${wiremock.port} --proxy-all=http://localhost/ --record-mappings</params>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>dk.dbc</groupId>
                <artifactId>postgresql-maven-plugin</artifactId>
                <version>1.3-SNAPSHOT</version>
                <executions>
                    <execution>
                        <id>start-postgresql</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <pgPort>${postgresql.port}</pgPort>
                            <pgDbName>rr</pgDbName>
                            <pgDbScripts>
                                <pgDbScript>${basedir}/src/test/resources/rawrepo-oai.sql</pgDbScript>
                                <pgDbScript>${project.build.directory}/sql/rawrepo.sql</pgDbScript>
                                <pgDbScript>${project.build.directory}/sql/queuerules.sql</pgDbScript>
                            </pgDbScripts>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-postgresql</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>shutdown</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.1</version>
                <configuration>
                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                    <environmentVariables>
                        <RAWREPO_RECORD_SERVICE_URL>http://localhost:${wiremock.port}/rawrepo-record-service/</RAWREPO_RECORD_SERVICE_URL>
                    </environmentVariables>
                    <systemProperties>
                        <postgresql.port>${postgresql.port}</postgresql.port>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
</project>
